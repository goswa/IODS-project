library(cluster)
clusplot(boston_scaled, km$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
library(factoextra)
fviz_cluster(km, data = boston_scaled, ellipse.type = "norm", geom = "point",
stand = FALSE, frame.type = "norm") + theme_bw()
# k-means clustering
km <-kmeans(boston_scaled, centers = 2)
# plot the Boston dataset with clusters
pairs(boston_scaled, col = km$cluster)
library(cluster)
clusplot(boston_scaled, km$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
library(factoextra)
fviz_cluster(km, data = boston_scaled, ellipse.type = "norm", geom = "point",
stand = FALSE) + theme_bw()
the
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
summary(gii)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# renaming columns
library(plyr)
rename(hd, c("HDI.Rank" ="HDI_RNK", "Human.Development.Index..HDI"="HDI"))
colnames(hd)
# renaming columns
library(plyr)
rename(hd, c("HDI.Rank" ="HDI_RNK", "Human.Development.Index..HDI"="HDI"))
colnames(hd)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
hd %>%
rename(
HDI.Rank = hdi_rnk,
Human.Development.Index..HDI. = HDI
)
rename(hd, HDI.Rank = hdi_rnk)
# print out the column names of the data
colnames(hd)
colnames(gii)
colnames(hd)[2] <- "HDI"
colnames(hd)
# print out the column names of the data
colnames(hd)
colnames(gii)
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)
# print out the column names of the data
colnames(hd)
colnames(gii)
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
colnames(hd)
colnames(gii)
# Modifying column names of Human development
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
# printing out the modified column name
colnames(hd)
# Modifying column names of Human development
colnames(gii)[3] <- "GI Index"
colnames(gii)[4] <- "mat mor ratio"
colnames(gii)[5] <- "adol brth rate"
colnames(gii)[6] <- "Par_percent"
colnames(gii)[7] <- "secedu_f"
colnames(gii)[8] <- "secedu_m"
colnames(gii)[9] <- "labfor_f"
colnames(gii)[10] <- "labfor_m"
# printing out the modified column name
colnames(gii)
printing out the modified column name
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- ("Country")
HD_GII <- inner_join(hd, gii, by = join_by, suffix = c(".hd", ".gii"))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- ("Country")
HD_GII <- inner_join(hd, gii, by = join_by, suffix = c(".hd", ".gii"))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
hdgii <- inner_join(hd, gii, by = Country)
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- ("Country")
hdgii <- inner_join(hd, gii, by = "Country")
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- ("Country")
hdgii <- inner_join(hd, gii, by = join_by)
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
new <- inner_join(hd, gii)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# Modifying column names of Human development
colnames(hd)[3] <- "HD_index"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
# printing out the modified column name
colnames(hd)
# Modifying column names of Human development
colnames(gii)[3] <- "GI Index"
colnames(gii)[4] <- "mat mor ratio"
colnames(gii)[5] <- "adol brth rate"
colnames(gii)[6] <- "Par_percent"
colnames(gii)[7] <- "secedu_f"
colnames(gii)[8] <- "secedu_m"
colnames(gii)[9] <- "labfor_f"
colnames(gii)[10] <- "labfor_m"
# printing out the modified column name
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
new <- inner_join(hd, gii, by = "Country")
# see the new column names
colnames(new)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# Modifying column names of Human development
colnames(hd)[3] <- "HD_index"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
# printing out the modified column name
colnames(hd)
# Modifying column names of Human development
colnames(gii)[3] <- "GI Index"
colnames(gii)[4] <- "mat mor ratio"
colnames(gii)[5] <- "adol brth rate"
colnames(gii)[6] <- "Par_percent"
colnames(gii)[7] <- "secedu_f"
colnames(gii)[8] <- "secedu_m"
colnames(gii)[9] <- "labfor_f"
colnames(gii)[10] <- "labfor_m"
# printing out the modified column name
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- "Country"
new <- inner_join(hd, gii, by = join_by)
# see the new column names
colnames(new)
glimpse(new)
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# Modifying column names of Human development
colnames(hd)[3] <- "HD_index"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
# printing out the modified column name
colnames(hd)
# Modifying column names of Human development
colnames(gii)[3] <- "GI Index"
colnames(gii)[4] <- "mat mor ratio"
colnames(gii)[5] <- "adol brth rate"
colnames(gii)[6] <- "Par_percent"
colnames(gii)[7] <- "secedu_f"
colnames(gii)[8] <- "secedu_m"
colnames(gii)[9] <- "labfor_f"
colnames(gii)[10] <- "labfor_m"
# printing out the modified column name
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- "Country"
human <- inner_join(hd, gii, by = join_by)
# see the new column names and glimpse of the data
colnames(human)
glimpse(human)
# Saving the joined and modified data set to the 'data' folder using write.csv function
write.csv(human, file = "human.csv", row.names=FALSE)
#reading the csv to make sure everything is in order
MyData <- read.csv(file="human.csv", header=TRUE, sep=",")
dim(MyData)
# The dataset has 382 observations of 35 variables.
# Saving the joined and modified data set to the 'data' folder using write.csv function
write.csv(human, file = "human.csv", row.names=FALSE)
setwd("~/GitHub/IODS-project/data")
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets
# look at the (column) names of Human development and Gender inequality
names(hd)
names(gii)
# look at the structure of human development and Gender inequality
str(hd)
str(gii)
# print out summaries of the variables
summary(hd)
summary(gii)
# print out the column names of the data
colnames(hd)
colnames(gii)
# Modifying column names of Human development
colnames(hd)[3] <- "HD_index"
colnames(hd)[4] <- "life_exp"
colnames(hd)[5] <- "edu_years"
colnames(hd)[6] <- "edu_mean"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNI_HDI"
# printing out the modified column name
colnames(hd)
# Modifying column names of Human development
colnames(gii)[3] <- "GI Index"
colnames(gii)[4] <- "mat mor ratio"
colnames(gii)[5] <- "adol brth rate"
colnames(gii)[6] <- "Par_percent"
colnames(gii)[7] <- "secedu_f"
colnames(gii)[8] <- "secedu_m"
colnames(gii)[9] <- "labfor_f"
colnames(gii)[10] <- "labfor_m"
# printing out the modified column name
colnames(gii)
# Mutate the “Gender inequality” data and create two new variables.
# The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM)
library(dplyr)
library(ggplot2)
gii <- mutate(gii, secedu_m_f = (secedu_f/secedu_m))
gii <- mutate(gii, labfor_m_f = (labfor_f/labfor_m))
# Join together the two datasets using the variable Country as the identifier.
library(dplyr)
join_by <- "Country"
new <- inner_join(hd, gii, by = join_by)
# see the new column names and glimpse of the data
colnames(new)
glimpse(new)
# Saving the joined and modified data set to the 'data' folder using write.csv function
write.csv(new, file = "human.csv", row.names=FALSE)
#reading the csv to make sure everything is in order
MyData <- read.csv(file="human.csv", header=TRUE, sep=",")
dim(MyData)
# The dataset has 195 observations of 19 variables.
# linear discriminant analysis
lda.fit <- lda(crime ~ ., data = train)
# print the lda.fit object
lda.fit
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# target classes as numeric
classes <- as.numeric(train$crime)
# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
# linear discriminant analysis
lda.fit <- lda(cluster ~ ., data = train)
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
# linear discriminant analysis
lda.fit <- lda(Type ~ ., data=boston_scaled)
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km
# linear discriminant analysis
lda.fit <- lda( km~ ., data=boston_scaled)
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
# linear discriminant analysis
lda.fit <- lda( km$cluster~ ., data=boston_scaled)
# print the lda.fit object
lda.fit
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
km <-kmeans(Boston, centers = 4)
km$cluster
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km$cluster
# linear discriminant analysis
lda.fit <- lda( km$cluster~ ., data=boston_scaled)
# print the lda.fit object
lda.fit
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
library (MASS)
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
km <-kmeans(Boston, centers = 4)
km$cluster
# linear discriminant analysis
lda.fit <- lda( km$cluster~ ., data=boston_scaled)
# print the lda.fit object
lda.fit
# the function for lda biplot arrows
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
# plot the lda results
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
library(factoextra)
fviz_cluster(km, data = boston_scaled, ellipse.type = "norm", geom = "point",
stand = FALSE) + theme_bw()
